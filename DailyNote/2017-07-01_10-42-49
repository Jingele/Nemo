－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
材料准备和图学习
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
 上午学习了 shell，写了一个 文件编码转换的脚本 iconv -f gbk -t utf8 oldfile > newfile
将复旦大学的中文语了转成了utf8的编码格式，利用jieba进行分词；
后面将用scilearn学习库进行训练：TF-IDF(Term Frequency - Inverse Document Frequency)

词频(TF): 某一个给定的词语在该文件中出现的频率；
逆向文件频率(IDF): 某一特定词语的IDF 可以通过 文件总数 除以 出现该词语的文件数，再取对数得到。

TF × IDF 的乘积，可以反映出该单词对文件的分类效果；
该算法倾向于过滤掉常见的词语，保留重要的词语（在某类文件中出现的频率高，而在其他类的文件中出现次数少，从而实现准确的文件分类）

下午开始学习图Undirect 图，DFS，BFS，DAG（Direct Acyclic Graph), 
１．图的连通性，哪些节点和　源节点ｓ之间是有路径的，int edgeTo[], boolean marked[]

２．是否存在环路？　深度遍历时：　如果当前节点 v　的邻居节点 adj(v)　中有已经访问过的节点 n, 而且　n 不是节点ｖ的父节点，那么就存在环路了！　｛ｖ的邻居节点肯定包含他的父节点Ｆ，因为ｖ是通过其父节点Ｆ得到的，当然，此前，他的父节点已经被访问过。除此之外，要是有邻居节点访问过了，就代表有环路了。｝｛此处说的环至少包含３条边！！！！！！｝

３．图是否可以进行二分？利用ＢＦＳ逐个标记ｃｏｌｏｒ，如果发现一个已经标记涂过色的节点和当前要标记的颜色矛盾，则不能二分。｛二分就是把原图中的节点标记成两种颜色，使得图分成完全不连通的｝

 和耀电话1小时； 
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
今天　：　学习图中的算法，并实现。感触：栈数据结构--> 递归函数！！！　队列数据结构。
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－











